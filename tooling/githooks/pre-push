#!/bin/sh

# SPDX-FileCopyrightText: 2025 Eli Array Minkoff
#
# SPDX-License-Identifier: 0BSD

set -e
cd "$(git rev-parse --show-toplevel)"

arches='arm64 riscv64 s390x x86_64'
# fail with uncommitted changes - porcelain output will be empty if good to go
if git status --porcelain | grep -q .; then
    printf 'Uncommitted changes!\n' >&2
    exit 1
fi

# check for spelling mistakes
codespell
# check for missing or malformed license info - run silently by default, but on
# failure, run again with output
reuse lint -q || reuse lint

# ensure that code is properly formatted
cargo fmt --check --all

# this jq filter takes the JSON output of the nextest command, and resolves it
# to a boolean indicating if any tests are markrd as ignored
filter='[."rust-suites"[].testcases[].ignored] | any'

# make sure that all tests will be run
if [ "$(cargo nextest list -T json | jq "$filter")" = 'true' ]; then
    printf 'Tests would be ignored!\n' >&2
    exit 1
fi

# run general test suite
cargo nextest run
# check for clippy issues
cargo clippy --tests -- -D warnings
cargo clippy --tests --no-default-features --features=all_backends \
    --target x86_64-pc-windows-gnu -- -D warnings
# ensure that code coverage is at least 90%
cargo tarpaulin --fail-under 90
# test windows build
cargo nextest run --target x86_64-pc-windows-gnu --no-default-features \
    --features=all_backends

# test all single-backend builds one-by-one
for backend in $arches; do
    cargo nextest run --no-default-features --features "$backend,bintests"
done
