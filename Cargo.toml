# SPDX-FileCopyrightText: 2024 - 2025 Eli Array Minkoff
#
# SPDX-License-Identifier: 0BSD

[package]
name = "eambfc-rs"
version = "4.1.0-pre"
edition = "2024"

[features]
default = ["all_backends", "bintests", "disasmtests"]
all_backends = ["arm64", "riscv64", "s390x", "x86_64"]
arm64 = []
riscv64 = []
s390x = []
x86_64 = []
bintests = []
disasmtests = []
longopts = ["dep:lexopt"]

[lints.rust]
# don't warn on tarpaulin code coverage cfg conditions or custom cfgs
[lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = [
    'cfg(tarpaulin_include)',
    'cfg(can_run_arm64)',
    'cfg(can_run_riscv64)',
    'cfg(can_run_s390x)',
    'cfg(can_run_x86_64)',
    'cfg(can_run_default)',
    'cfg(eambfc_default_arch, values("arm64", "riscv64", "s390x", "x86_64"))'
]

[lints.clippy]
# enable these categories with a negative priority, so that individual lints can
# be overridden
suspicious = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# bit manipulation is needed often, and these types of casts are often needed
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
# some clippy::restriction tests that I want enabled
deref_by_slicing = "warn"
empty_structs_with_brackets = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
let_underscore_must_use = "warn"
allow_attributes_without_reason = "warn"
assertions_on_result_states = "warn"
dbg_macro = "warn"
same_name_method = "warn"
semicolon_outside_block = "warn"
exit = "warn"
unseparated_literal_suffix = "warn"
redundant_type_annotations = "warn"
field_scoped_visibility_modifiers = "warn"
missing_assert_message = "warn"

[profile.release]
lto = "thin"
codegen-units = 1
strip="symbols"

[dependencies]
lexopt = { version = "0.3.0", optional = true }

[dev-dependencies]
test_macros = { path = "test_macros" }
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.137"
tempfile = "3.15.0"
llvm-sys = { version = "191.0.0", features = ["prefer-dynamic"] }
